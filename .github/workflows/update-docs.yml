name: 🌟NICS💤

on:
  push:
    branches:
      - main

    paths:
      - 'docs/**'  # only rebuild docs webpage if docs/ folder is modified

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: TESTING
        run: |
          echo "Current directory: $(pwd)"
          echo "Files in current directory:"
          ls
          echo "------"

          echo "Navigating to the parent directory..."
          echo "Current directory: $(pwd)"
          cd ..
          echo "------"

          echo "Files in parent directory:"
          ls
          echo "------"

          echo "Navigating back to the original directory..."
          cd -
          echo "------"

          echo "Current directory: $(pwd)"
          echo "Files in current directory:"
          ls
          echo "------"

      - name: 📂 Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main
      
      - name: TESTING
        run: |
          echo "Current directory: $(pwd)"
          echo "Files in current directory:"
          ls
        
      - name: 📂 Checkout docs branch
        uses: actions/checkout@v3
        with:
          ref: docs

      - name: TESTING
        run: |
          echo "Current directory: $(pwd)"
          echo "Files in current directory:"
          ls
      
      # - name: list docs
      #   run: ls -R
      
      # - name: test create a file
      #   run: echo "This is a sample file" > newfile123123.txt

      # - name: test commit and push changes
      #   run: |
      #     git config user.name "Testing commit from workflows"
      #     git config user.email "youremail@example.com"
      #     git add .
      #     git commit -m "testing Gaction: Add newfile.txt via workflow"
      #     git push
      
      # - name: 🐍 Set up Python
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: 3.8

      # - name: 🛒 Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install -U nics

      # - name: 🛒 Install Ruby
      #   uses: ruby/setup-ruby@v1
      #   with:
      #     ruby-version: '3.2' # Not needed with a .ruby-version file
      #     bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      # - name: Install dependencies
      #   run: |
      #     gem install bundler
      #     bundle install